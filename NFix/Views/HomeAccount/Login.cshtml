@model DataLayer.ViewModel.LoginViewModel
<div class="alternate">

    <img src="~/Resources/Png/Login.png" alt="Boxing Club, Gym" width="400" height="600" />

    @using (Ajax.BeginForm("Login", "HomeAccount", new AjaxOptions() { HttpMethod = "POST", OnFailure = "doneModal('Modal-Show')", OnSuccess = "LoadingEnd('#Modal-Body')", UpdateTargetId = "Modal-Body" }, htmlAttributes: new { @id = "LoginForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="column">
            <button class="no-glow uk-modal-close uk-margin-auto-left" type="button" uk-close></button>
            <h3 class="uk-margin-small-top">
                ورود
            </h3>
            @if (Request.QueryString["ReturnUrl"] == "Active")
            {
                <div class="uk-text-danger uk-margin-bottom">
                    <p class="uk-text-danger">حساب کاربری شما فعال شد می توانید وارد حساب خود شوید</p>
                </div>
            }
            else if (Request.QueryString["ReturnUrl"] == "RecoveryPassWord")
            {
                <div class="uk-text-danger uk-margin-bottom">
                    <p class="uk-text-danger">رمز شما تغیر یافت می توانید وارد حساب خود شوید</p>
                </div>
            }
            else if (User.Identity.IsAuthenticated && Request.QueryString["ReturnUrl"] != null)
            {
                <div class="uk-text-danger uk-margin-bottom">
                    <p class="uk-text-danger">شما مجوز ورود به بخش درخواست شده را ندارید </p>
                </div>
            }
            else if (!User.Identity.IsAuthenticated && Request.QueryString["ReturnUrl"] != null)
            {
                <div class="uk-text-danger uk-margin-bottom">
                    <p class="uk-text-danger">لطفا وارد حساب کاربری خود شوید </p>
                </div>
            }

            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "uk-margin-small-top" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "uk-margin-small-top" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            <div class="uk-margin-auto-left row uk-margin-small-top uk-margin-bottom row">
                @Html.LabelFor(model => model.RememberMe, htmlAttributes: new { @class = "" })
                @Html.EditorFor(model => model.RememberMe, new { htmlAttributes = new { @class = "uk-checkbox uk-margin-small-left uk-margin-auto-top" } })
                @Html.ValidationMessageFor(model => model.RememberMe, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="hidden" name="GoogleCapcha" class="GoogleCapcha" value="" />
                <span role="alert" class="alert">
                    @Html.ValidationSummary(true, "", new { @class = "uk-text-danger" })
                </span>
            </div>
            <a onclick="ForgotPassword()"> رمز خود را فراموش کرده اید؟</a>

            <div class="buttons-panel">
                <a class="uk-button uk-button-default uk-margin-auto-bottom uk-margin-auto-left uk-margin-right "
                   onclick="showRegister()">ثبت نام</a>

                <button class="uk-margin-auto-bottom" onclick="LoadingRun('#LoginForm')">
                    ورود
                </button>
            </div>

        </div>
    }

</div>
